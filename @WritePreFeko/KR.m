function F = KR(F, s1,s2,s3,s4, ang, edgelenOut,edgelenIn, scale, LA, MEkr)
	
	% INPUT
	% S2
	% S1 - S4 -- S3
	%
	% s1: The centre point of the circle.
	% s2: A point that is situated at any distance perpendicular to and above the plane
	% of the circle. (why is this needed??)
	% s3: A point on the outer arc.
	% s4: If there is a value present for this parameter, then a circular ring is created. S4
	% 	must lie between S1 and S3.
	% ang: The angle subtended by the arc in degrees.
	% edglenOut: The maximum edge length of the triangles along the outer edge of the
	% 	arc in m (is scaled by the SF card). If this parameter is left empty, the value
	% 	specified with the IP card is used.
	% edglenIn: When a disk with a hole is created, the maximum edge length for the
	%		triangles along the inner edge of the arc in m (is scaled by the SF card). If this
	% 	parameter is left empty, the value specified with the IP card is used.
	% 	scale: If this parameter is empty or is set to 1, a circular disk is created. If set to b
	% 	b/a, an elliptical disk is created. Here a gives the ratio of the two half axes,
	% 	where a is the distance S1–S3. It is recommended to generate elliptical disks 
	% 	with extremely small or extremely large axial ratios with a CAD system as the
	% 	distortion formulation used in PREFEKO may fail in these cases.
	%
	% 	The following paragraph is taken (and corresponding previous information) from :
	% User’s Manual
	% Suite 6.1.1
	% December 2011
	% Copyright 1998 – 2011: EM Software & Systems-S.A. (Pty) Ltd
	% 32 Techno Avenue, Technopark, Stellenbosch, 7600, South Africa
	% Tel: +27-21-880-1880, Fax: +27-21-880-1936
	% E-Mail: feko@emss.co.za
	% WWW: http://www.feko.info
	%
	% This card creates a mesh of surface triangles in the shape of circular region with or without a
	% hole. It is also possible to distort it to an elliptical region.
	% ...
	% The circle’s plane is perpendicular to the line S1–S2. This length is arbitrary. The radius of the
	% disc is given by the length between the points S3 and S1. The area that is to be subdivided (the
	% shaded region in the figure) is generated by sweeping the edge S3–S1 around the axis S1–S2
	% through φ degrees in the mathematically positive sense. For φ = 360◦ a circle is obtained.
	% The fineness of the mesh is determined by the maximum edge length specified by the last IP
	% card prior to the KR card. Along the arcs, accurate modelling of the geometry may require finer
	% segmentation and the maximum edge length values specify the maximum edge length along the
	% outer and inner (if applicable) arcs respectively. If any of these values are not specified the length
	% specified with the IP card will be used on the corresponding arc.
	% The normal vectors of the triangles on the disk all point in the direction from S1 to S2.
	if ~ischar(ang), ang = num2str(ang,writepr()); else ang = ['#' ang]; end
	if ~ischar(edgelenOut), edgelenOut = num2str(edgelenOut,writepr()); else edgelenOut = ['#' edgelenOut]; end
	if ~ischar(edgelenIn), edgelenIn = num2str(edgelenIn,writepr()); else edgelenIn = ['#' edgelenIn]; end
	if ~exist('scale'), scale=[]; elseif ~ischar(scale), scale = num2str(scale,writepr()); else scale = ['#' scale]; end

	try, ind = size(F.KR)(2)+1; catch, ind=1; end

	if exist('MEkr') && ~isempty(MEkr), F.KR{ind} = ME(MEkr); ind=ind+1; end % adds a MEkrdium property
	if exist('LA') && ~isempty(LA), F.KR{ind} = ['LA: ' LA]; ind=ind+1; end % adds a labels
	
	if isempty(scale), scale=''; end
	if isempty(s1), s1=''; end
	if isempty(s2), s2=''; end
	if isempty(s3), s3=''; end
	if isempty(s4), s4=''; end
	if isempty(ang), ang=''; end
	if isempty(edgelenOut), edgelenOut=''; end
	if isempty(edgelenIn), edgelenIn=''; end

	F.KR{ind} = ['KR: ' s1 ' : ' s2 ' : ' s3 ' : ' s4 ' :  : ' ang ' : ' edgelenOut ' : ' edgelenIn ' : ' scale];
% 	else
% 		F.KR{ind} = ['KR: ' s1 ' : ' s2 ' : ' s3 ' : ' s4 ' :  : ' ang ' : ' edgelenOut ' : ' edgelenIn ' : '];
% 	end



